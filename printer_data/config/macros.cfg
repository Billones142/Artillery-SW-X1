# Macro creation guide: https://www.klipper3d.org/Command_Templates.html
# Printer available variables: https://www.klipper3d.org/Status_Reference.html

############################ MACROS ############################
[gcode_macro PRINT_START]
gcode:
  {% set N = params.NOZZLE|default(200)|float %}
  {% set B = params.BED|default(60)|float %}
  {% set P = params.EPREHEAT|default(120)|float %}
  SAVE_GCODE_STATE NAME=impresion
  G28 ;home all axes
  Z_TILT_ADJUST

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
  M117 Enfrirando cama
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=-5 MAXIMUM={B};Wait for bed to cool down
  M140 S{B} ;Start heating bed
  M117 Calentando cama
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={B};Wait for bed to reach temp before proceeding

  M117 Calibrando cama
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={P} #preheats the extruder
  BED_MESH_CALIBRATE ;calibrates mesh using KAMP(Klipper)

  M117 Calentando extrusor
  SMART_PARK
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  M117 Enfrirando extrusor
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=-5 MAXIMUM={N};Wait for bed to cool down
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={N} ;Start heating extruder
  M117 Calentando extrusor
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={N};Wait for bed to reach temp before proceeding
  
  M117 Purgando extrusor
  LINE_PURGE
  M117 Imprimiendo
  ;END OF GCODE START

[gcode_macro PRINT_END]
gcode:
  G91; relative positioning
  G1 E-15 F2000; retract material
  G1 Z2.00 F13000 ; move z up little to prevent scratching of print
  G90; absolute positioning
  G1 X0 F7000; fast move extruder to the side
  G91 ;relative positioning
  G1 Z60 F15000
  G90 ;absolute positioning
  G1 X0 Y300 F3000 ; prepare for part removal
  M84 ; disable motors
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
  M106 S0 ; turn off fan
  RESTORE_GCODE_STATE NAME=impresion
  M117 Fin de la impresion

[gcode_macro LOAD_FILAMENT]
gcode:
 SAVE_GCODE_STATE NAME=FILAMENT_LOAD
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E120 F350          # Move the extruder forward 120mm at a speed of 350mm/minute
 M82                   # Put the extruder back into absolute mode.
 RESTORE_GCODE_STATE NAME=FILAMENT_LOAD

[gcode_macro UNLOAD_FILAMENT]
gcode:
 SAVE_GCODE_STATE NAME=FILAMENT_UNLOAD
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E-120 F2000          # Move the extruder backwards 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.
 RESTORE_GCODE_STATE NAME=FILAMENT_UNLOAD

[gcode_macro M600]
description: .
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(10)|float %}
    {% set Z = params.Z|default(10)|float %}
    M106 S0
    SAVE_GCODE_STATE NAME=M600_state
    SET_FILAMENT_SENSOR SENSOR=filament_runout ENABLE=0
    m117
    #PAUSE
    PAUSE_BASE #Prueba, ahora no deberia irse al lugar de la pausa
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    UNLOAD_FILAMENT
    SET_FILAMENT_SENSOR SENSOR=filament_runout ENABLE=1
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro Calibrar_cama]
gcode:
    G28
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE PROFILE="default"

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro NOT_HOMED_MOVEMENT]
description: CAREFUL, you can crash your printer with this macro
gcode:
  SAVE_GCODE_STATE NAME=NOT_HOMED_MOVEMENT
  {% set wasNotHomed = printer.homed_axes != 'XYZ' %}
  {% set x  = params.X|default(0)|float %}
  {% set y  = params.Y|default(0)|float %}
  {% set z  = params.Z|default(0)|float %}
  {% set speed  = params.SPEED|default(1500)|int %}
  
  {% if wasNotHomed %}
        SET_KINEMATIC_POSITION
        M118 turning on motors
  {% endif %}
  
  G91
  G1 X{x} Y{y} Z+{z} F{speed}
  
  {% if wasNotHomed %}
        M84 #if it wasnt homed then turn of the motors again
        M118 turning off motors again
  {% endif %}
  RESTORE_GCODE_STATE NAME=NOT_HOMED_MOVEMENT

[gcode_macro SUBIR]
description: Sube el extrusor sin tener que hacer home, en el caso que ya se halla hecho el home no se perdera la posicion del extrusor
gcode:
  SAVE_GCODE_STATE NAME=my_move_up_state
  {% set distancia  = params.D|default(100)|float %}
  NOT_HOMED_MOVEMENT Z={distancia}
  RESTORE_GCODE_STATE NAME=my_move_up_state